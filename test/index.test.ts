import { CdktfProviderProject, CdktfProviderProjectOptions } from "../src";
import { synthSnapshot } from "./utils";

const getProject = (
  opts: Partial<CdktfProviderProjectOptions> = {}
): CdktfProviderProject =>
  new CdktfProviderProject({
    name: "test",
    terraformProvider: "random",
    author: "cdktf-team",
    authorAddress: "cdktf-team address",
    cdktfVersion: "0.10.3",
    constructsVersion: "10.0.0",
    defaultReleaseBranch: "main",
    repositoryUrl: "github.com/cdktf/cdktf",
    forceMajorVersion: 42,
    ...opts,
  });

test("synths with minimal options", () => {
  const snapshot = synthSnapshot(getProject());

  expect(snapshot).toMatchSnapshot();
});

test("build runs without telemetry", () => {
  const snapshot = synthSnapshot(getProject());

  expect(snapshot[".projen/tasks.json"]).toHaveProperty(
    "env.CHECKPOINT_DISABLE",
    "1"
  );
});

test("build runs without crash reporting", () => {
  const snapshot = synthSnapshot(getProject());

  expect(snapshot["cdktf.json"]).toHaveProperty("sendCrashReports", false);
});

test("synths with custom Github runners", () => {
  const snapshot = synthSnapshot(getProject({ useCustomGithubRunner: true }));

  expect(snapshot).toMatchSnapshot();
});

test("synths with an advanced version range syntax", () => {
  const snapshot = synthSnapshot(
    getProject({ cdktfVersion: ">=0.12.2 <0.14.0" })
  );

  expect(snapshot).toMatchSnapshot();
});

test("sets minMajorVersion to 1 by default so that breaking changes increast the major version", () => {
  const snapshot = synthSnapshot(getProject());

  expect(snapshot[".projen/tasks.json"]).toHaveProperty(
    "tasks.release.env.MIN_MAJOR",
    "1"
  );
});

test("sets resolution for yargs", () => {
  const snapshot = synthSnapshot(getProject());

  expect(snapshot["package.json"]).toHaveProperty("resolutions");
  expect(snapshot["package.json"].resolutions).toHaveProperty("@types/yargs");
  expect(snapshot["package.json"].resolutions["@types/yargs"]).toEqual(
    "17.0.13"
  );
});

test("aws has git-lfs overwrites for some documentatio files", () => {
  const snapshot = synthSnapshot(
    getProject({ terraformProvider: "aws@~> 4.0" })
  );

  expect(snapshot[".gitattributes"]).toMatchInlineSnapshot(`
    "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

    /.gitattributes linguist-generated
    /.github/CODEOWNERS linguist-generated
    /.github/ISSUE_TEMPLATE/config.yml linguist-generated
    /.github/pull_request_template.md linguist-generated
    /.github/workflows/alert-open-prs.yml linguist-generated
    /.github/workflows/auto-close-community-issues.yml linguist-generated
    /.github/workflows/build.yml linguist-generated
    /.github/workflows/lock.yml linguist-generated
    /.github/workflows/next-cdktf-version-pr.yml linguist-generated
    /.github/workflows/provider-upgrade.yml linguist-generated
    /.github/workflows/pull-request-lint.yml linguist-generated
    /.github/workflows/release.yml linguist-generated
    /.github/workflows/stale.yml linguist-generated
    /.github/workflows/upgrade-main.yml linguist-generated
    /.gitignore linguist-generated
    /.mergify.yml linguist-generated
    /.npmignore linguist-generated
    /.projen/** linguist-generated
    /.projen/deps.json linguist-generated
    /.projen/files.json linguist-generated
    /.projen/tasks.json linguist-generated
    /API.md linguist-generated
    /cdktf.json linguist-generated
    /LICENSE linguist-generated
    /package.json linguist-generated
    /README.md linguist-generated
    /scripts/check-for-upgrades.js linguist-generated
    /scripts/should-release.js linguist-generated
    /tsconfig.dev.json linguist-generated
    /yarn.lock linguist-generated
    docs/wafv2RuleGroup.*.md filter=lfs diff=lfs merge=lfs -text
    docs/wafv2WebAcl.*.md filter=lfs diff=lfs merge=lfs -text"
  `);
});
